[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[tool.flit.module]
name = "ambient_package_update"

[project]
name = "ambient-package-update"
authors = [
    {'name' = 'Ambient Digital', 'email' = 'hello@ambient.digital'},
]
readme = "README.md"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Utilities",
]
dynamic = ["version", "description"]
license = {"file" = "LICENSE.md"}
dependencies = [
    # Rendering
    "typer~=0.9",
    "Jinja2~=3.1",
]

[project.optional-dependencies]
dev = [
    # Deploy
    "flit~=3.9",
    "keyring~=25.2",
    # Linting
    "pre-commit~=3.7",
    "ruff~=0.4",
]

[project.urls]
'Homepage' = 'https://github.com/ambient-innovation/ambient-package-update/'
'Documentation' = 'https://github.com/ambient-innovation/ambient-package-update/blob/master/README.md'
'Maintained by' = 'https://ambient.digital/'
'Bugtracker' = 'https://github.com/ambient-innovation/ambient-package-update/issues'
'Changelog' = 'https://github.com/ambient-innovation/ambient-package-update/blob/master/CHANGES.md'

[tool.ruff]
lint.select = [
    "E",       # pycodestyle errors
    "W",       # pycodestyle warnings
    "F",       # Pyflakes
    "N",       # pep8-naming
    "I",       # isort
    "B",       # flake8-bugbear
    "A",       # flake8-builtins
    "DTZ",     # flake8-datetimez
    "DJ",      # flake8-django
    "TD",      # flake8-to-do
    "RUF100",  # Removes unnecessary "#noqa" comments
    "YTT",     # Avoid non-future-prove usages of "sys"
    "FBT",     # Protects you from the "boolean trap bug"
    "C4",      # Checks for unnecessary conversions
    "PIE",     # Bunch of useful rules
    "SIM",     # Simplifies your code
    "INT",     # Validates your gettext translation strings
    "PERF",    # PerfLint
    "PGH",     # No all-purpose "# noqa" and eval validation
    "PL",      # PyLint
    "INP"      # Ban PEP-420 implicit namespace packages
]
lint.ignore = [
    'N999',     # Project name contains underscore, not fixable
    'A003',     # Django attributes shadow python builtins
    'DJ001',    # Django model text-based fields shouldn't be nullable
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
lint.fixable = [
    "E",       # pycodestyle errors
    "W",       # pycodestyle warnings
    "F",       # Pyflakes
    "N",       # pep8-naming
    "I",       # isort
    "B",       # flake8-bugbear
    "A",       # flake8-builtins
    "DTZ",     # flake8-datetimez
    "DJ",      # flake8-django
    "TD",      # flake8-to-do
    "RUF100",  # Removes unnecessary "#noqa" comments
    "YTT",     # Avoid non-future-prove usages of "sys"
    "FBT",     # Protects you from the "boolean trap bug"
    "C4",      # Checks for unnecessary conversions
    "PIE",     # Bunch of useful rules
    "SIM",     # Simplifies your code
    "INT",     # Validates your gettext translation strings
    "PERF",    # PerfLint
    "PGH",     # No all-purpose "# noqa" and eval validation
    "PL",      # PyLint
    "INP"      # Ban PEP-420 implicit namespace packages
]
lint.unfixable = []

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "*/migrations/*"
]

# Same as Black.
line-length = 120

# Allow unused variables when underscore-prefixed.
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.12
target-version = "py312"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
